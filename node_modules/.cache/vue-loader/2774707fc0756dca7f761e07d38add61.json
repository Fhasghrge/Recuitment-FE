{"remainingRequest":"C:\\Users\\Aureliano\\Desktop\\2019recruitment-fe\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Aureliano\\Desktop\\2019recruitment-fe\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Aureliano\\Desktop\\2019recruitment-fe\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Aureliano\\Desktop\\2019recruitment-fe\\src\\router\\sub\\add.vue?vue&type=template&id=c8e2e4b6&scoped=true&","dependencies":[{"path":"C:\\Users\\Aureliano\\Desktop\\2019recruitment-fe\\src\\router\\sub\\add.vue","mtime":1563618274987},{"path":"C:\\Users\\Aureliano\\Desktop\\2019recruitment-fe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Aureliano\\Desktop\\2019recruitment-fe\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Aureliano\\Desktop\\2019recruitment-fe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Aureliano\\Desktop\\2019recruitment-fe\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { attrs: { id: \"addHead\" } }, [\n      _c(\"h3\", [_vm._v(_vm._s(_vm.groupName))]),\n      _c(\"span\", [_vm._v(\"/招新题目\")])\n    ]),\n    _c(\"div\", { attrs: { id: \"motify\" } }, [\n      _c(\"a\", { attrs: { href: \"./#/manager\", id: \"return\" } }, [\n        _vm._v(\"返回\")\n      ]),\n      _c(\"textarea\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.quesDescribe,\n            expression: \"quesDescribe\"\n          }\n        ],\n        attrs: { name: \"\", id: \"quesDescribe\", cols: \"30\", rows: \"5\" },\n        domProps: { value: _vm.quesDescribe },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.quesDescribe = $event.target.value\n          }\n        }\n      }),\n      _c(\"span\", { attrs: { id: \"typeTips\" } }, [_vm._v(\"题目类型\")]),\n      _c(\n        \"select\",\n        {\n          ref: \"options\",\n          attrs: { name: \"questionType\", id: \"questionType\" },\n          on: { click: _vm.changeFlag }\n        },\n        [\n          _c(\"option\", { attrs: { value: \"单选\" } }, [_vm._v(\"单选\")]),\n          _c(\"option\", { attrs: { value: \"多选\" } }, [_vm._v(\"多选\")]),\n          _c(\"option\", { attrs: { value: \"填空\" } }, [_vm._v(\"填空\")]),\n          _c(\"option\", { attrs: { value: \"简答\" } }, [_vm._v(\"简答\")]),\n          _c(\"option\", { attrs: { value: \"上传文件\" } }, [_vm._v(\"上传文件\")])\n        ]\n      ),\n      _vm._m(0),\n      _vm.flag\n        ? _c(\"div\", [\n            _vm._m(1),\n            _c(\n              \"ul\",\n              { attrs: { id: \"optionText\" } },\n              _vm._l(_vm.optionList, function(item, index) {\n                return _c(\"li\", { key: index, class: item.name }, [\n                  _c(\"input\", {\n                    ref: \"optionText\",\n                    refInFor: true,\n                    attrs: { type: \"text\" },\n                    domProps: { value: item.text }\n                  }),\n                  _c(\"img\", {\n                    staticClass: \"addImg\",\n                    attrs: { src: require(\"../../img/添加icon.png\") },\n                    on: {\n                      click: function($event) {\n                        return _vm.add(index)\n                      }\n                    }\n                  }),\n                  _c(\"img\", {\n                    staticClass: \"delImg\",\n                    attrs: { src: require(\"../../img/减少icon.png\") },\n                    on: {\n                      click: function($event) {\n                        return _vm.del(index)\n                      }\n                    }\n                  }),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: item.answer,\n                        expression: \"item.answer\"\n                      }\n                    ],\n                    ref: \"check\",\n                    refInFor: true,\n                    attrs: { type: \"checkbox\", id: \"checkTrueAnswer\" },\n                    domProps: {\n                      checked: Array.isArray(item.answer)\n                        ? _vm._i(item.answer, null) > -1\n                        : item.answer\n                    },\n                    on: {\n                      change: function($event) {\n                        var $$a = item.answer,\n                          $$el = $event.target,\n                          $$c = $$el.checked ? true : false\n                        if (Array.isArray($$a)) {\n                          var $$v = null,\n                            $$i = _vm._i($$a, $$v)\n                          if ($$el.checked) {\n                            $$i < 0 &&\n                              _vm.$set(item, \"answer\", $$a.concat([$$v]))\n                          } else {\n                            $$i > -1 &&\n                              _vm.$set(\n                                item,\n                                \"answer\",\n                                $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                              )\n                          }\n                        } else {\n                          _vm.$set(item, \"answer\", $$c)\n                        }\n                      }\n                    }\n                  }),\n                  _c(\"img\", {\n                    staticClass: \"upImg\",\n                    attrs: { src: require(\"../../img/上移icon.png\") },\n                    on: {\n                      click: function($event) {\n                        return _vm.Up(index)\n                      }\n                    }\n                  }),\n                  _c(\"img\", {\n                    staticClass: \"downImg\",\n                    attrs: { src: require(\"../../img/下移icon.png\") },\n                    on: {\n                      click: function($event) {\n                        return _vm.Down(index)\n                      }\n                    }\n                  })\n                ])\n              }),\n              0\n            ),\n            _c(\n              \"button\",\n              { attrs: { id: \"addBtn\" }, on: { click: _vm.addOption } },\n              [_vm._v(\"添加选项\")]\n            )\n          ])\n        : _vm._e(),\n      _c(\"span\", { attrs: { id: \"confirmMsg\" } }, [\n        _vm._v(_vm._s(_vm.confirmMsg))\n      ]),\n      _c(\n        \"button\",\n        { attrs: { id: \"confirmBtn\" }, on: { click: _vm.addQuestion } },\n        [_vm._v(\"保存修改\")]\n      )\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"label\", [\n      _c(\"input\", { attrs: { type: \"checkbox\", value: \"\" } }),\n      _vm._v(\"必答\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { attrs: { id: \"optionHead\" } }, [\n      _c(\"p\", { staticClass: \"optionHead\" }, [_vm._v(\"选项文字\")]),\n      _c(\"p\", { staticClass: \"trueAnswer optionHead\" }, [_vm._v(\"正确答案\")]),\n      _c(\"p\", { staticClass: \"upDown optionHead\" }, [_vm._v(\"上移下移\")])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}